{
  "id": 31,
  "description": "In this course, you will build a simple browser-based application that accesses your camera and applies Instagram-like filters to photos or video streams in real time. Along the way, you will explore how Cursor can simplify everyday web development by building out-of-the-box modules.",
  "title": "Real-Time Camera Filter App",
  "categories": "Web, Interactive",
  "cover_url": "https://pdqqywctjlfcaeeaykvj.supabase.co/storage/v1/object/public/aidl-bucket//output_1.png",
  "readme": "# Instagram-like Camera Filters Web App\n\nA simple web application that accesses your device's camera and allows you to apply Instagram-like filters to your video stream in real-time. Built with vanilla HTML, CSS, and JavaScript.\n\n[Link to project](https://enlightby.ai/#/projects/31)  \n[Install Enlighter extention](https://marketplace.visualstudio.com/items?itemName=ai-dl.enlighter)  \n[Join Discord Server](https://discord.gg/VfAzUvUxRM)\n\n## Features\n\n- Real-time camera access\n- Multiple Instagram-style filters (Normal, Grayscale, Sepia, Vintage, Brightness, Contrast, Saturation, Blur)\n- Switch between front and back cameras\n- Take photos with applied filters\n- View captured photos in a gallery\n- Click on photos to view them in full size\n\n## How to Use\n\n1. Clone or download this repository\n2. Open `index.html` in a modern web browser (Chrome, Firefox, Safari, Edge)\n3. Allow camera access when prompted\n4. Select different filters by clicking on the filter buttons\n5. Switch between front and back cameras using the \"Switch Camera\" button\n6. Take photos with the current filter applied using the \"Take Photo\" button\n7. View your captured photos in the gallery below\n8. Click on any photo to view it in full size in a new tab\n\n## Browser Compatibility\n\nThis app works best in modern browsers that support the MediaDevices API. For the best experience, use:\n\n- Google Chrome (latest)\n- Mozilla Firefox (latest)\n- Safari (latest)\n- Microsoft Edge (latest)\n\n## Privacy Note\n\nThis application processes all camera data locally in your browser. No images or video data are sent to any server.\n\n## Running Locally with a Server\n\nFor the best experience, especially on some browsers that restrict camera access on local files, you might want to run this with a simple HTTP server:\n\nUsing Python:\n```\n# Python 3\npython -m http.server\n\n# Python 2\npython -m SimpleHTTPServer\n```\n\nThen open `http://localhost:8000` in your browser.\n                                \n                            \n                        ",
  "short_description": "Build a simple frontend app to explore Cursor\u2019s generative power",
  "ides": "cursor"
}